/**
 * Gridly API
 * Gridly API documentation
 *
 * The version of the OpenAPI document: 4.15.1
 * Contact: support@gridly.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Group model module.
 * @module com.gridly.api/model/Group
 * @version 4.15.1
 */
class Group {
    /**
     * Constructs a new <code>Group</code>.
     * @alias module:com.gridly.api/model/Group
     */
    constructor() { 
        
        Group.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Group</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.gridly.api/model/Group} obj Optional instance to populate.
     * @return {module:com.gridly.api/model/Group} The populated <code>Group</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Group();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('groupId')) {
                obj['groupId'] = ApiClient.convertToType(data['groupId'], 'Number');
            }
            if (data.hasOwnProperty('companyId')) {
                obj['companyId'] = ApiClient.convertToType(data['companyId'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('logoUrl')) {
                obj['logoUrl'] = ApiClient.convertToType(data['logoUrl'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('isSystemGroup')) {
                obj['isSystemGroup'] = ApiClient.convertToType(data['isSystemGroup'], 'Boolean');
            }
            if (data.hasOwnProperty('systemGroup')) {
                obj['systemGroup'] = ApiClient.convertToType(data['systemGroup'], 'Boolean');
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
Group.prototype['id'] = undefined;

/**
 * @member {Number} groupId
 */
Group.prototype['groupId'] = undefined;

/**
 * @member {Number} companyId
 */
Group.prototype['companyId'] = undefined;

/**
 * @member {String} name
 */
Group.prototype['name'] = undefined;

/**
 * @member {String} logoUrl
 */
Group.prototype['logoUrl'] = undefined;

/**
 * @member {module:com.gridly.api/model/Group.TypeEnum} type
 */
Group.prototype['type'] = undefined;

/**
 * @member {Boolean} isSystemGroup
 */
Group.prototype['isSystemGroup'] = undefined;

/**
 * @member {Boolean} systemGroup
 */
Group.prototype['systemGroup'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
Group['TypeEnum'] = {

    /**
     * value: "NORMAL"
     * @const
     */
    "NORMAL": "NORMAL",

    /**
     * value: "ADMIN"
     * @const
     */
    "ADMIN": "ADMIN"
};



export default Group;

