/**
 * Gridly API
 * Gridly API documentation
 *
 * The version of the OpenAPI document: 4.33.0
 * Contact: support@gridly.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import CellHistory from './CellHistory';

/**
 * The RecordHistory model module.
 * @module com.gridly.api/model/RecordHistory
 * @version 4.33.0
 */
class RecordHistory {
    /**
     * Constructs a new <code>RecordHistory</code>.
     * @alias module:com.gridly.api/model/RecordHistory
     */
    constructor() { 
        
        RecordHistory.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RecordHistory</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.gridly.api/model/RecordHistory} obj Optional instance to populate.
     * @return {module:com.gridly.api/model/RecordHistory} The populated <code>RecordHistory</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RecordHistory();

            if (data.hasOwnProperty('path')) {
                obj['path'] = ApiClient.convertToType(data['path'], 'String');
            }
            if (data.hasOwnProperty('cells')) {
                obj['cells'] = ApiClient.convertToType(data['cells'], [CellHistory]);
            }
            if (data.hasOwnProperty('lastModifiedBy')) {
                obj['lastModifiedBy'] = ApiClient.convertToType(data['lastModifiedBy'], 'String');
            }
            if (data.hasOwnProperty('lastModifiedTime')) {
                obj['lastModifiedTime'] = ApiClient.convertToType(data['lastModifiedTime'], 'Date');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RecordHistory</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RecordHistory</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['path'] && !(typeof data['path'] === 'string' || data['path'] instanceof String)) {
            throw new Error("Expected the field `path` to be a primitive type in the JSON string but got " + data['path']);
        }
        if (data['cells']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['cells'])) {
                throw new Error("Expected the field `cells` to be an array in the JSON data but got " + data['cells']);
            }
            // validate the optional field `cells` (array)
            for (const item of data['cells']) {
                CellHistory.validateJsonObject(item);
            };
        }
        // ensure the json data is a string
        if (data['lastModifiedBy'] && !(typeof data['lastModifiedBy'] === 'string' || data['lastModifiedBy'] instanceof String)) {
            throw new Error("Expected the field `lastModifiedBy` to be a primitive type in the JSON string but got " + data['lastModifiedBy']);
        }

        return true;
    }


}



/**
 * @member {String} path
 */
RecordHistory.prototype['path'] = undefined;

/**
 * @member {Array.<module:com.gridly.api/model/CellHistory>} cells
 */
RecordHistory.prototype['cells'] = undefined;

/**
 * @member {String} lastModifiedBy
 */
RecordHistory.prototype['lastModifiedBy'] = undefined;

/**
 * @member {Date} lastModifiedTime
 */
RecordHistory.prototype['lastModifiedTime'] = undefined;






export default RecordHistory;

