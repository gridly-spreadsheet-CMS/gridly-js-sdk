/**
 * Gridly API
 * Gridly API documentation
 *
 * The version of the OpenAPI document: 5.9.0
 * Contact: support@gridly.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DateTimeFormat from './DateTimeFormat';

/**
 * The UpdateGridSetting model module.
 * @module com.gridly.api/model/UpdateGridSetting
 * @version 5.9.0
 */
class UpdateGridSetting {
    /**
     * Constructs a new <code>UpdateGridSetting</code>.
     * @alias module:com.gridly.api/model/UpdateGridSetting
     */
    constructor() { 
        
        UpdateGridSetting.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateGridSetting</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.gridly.api/model/UpdateGridSetting} obj Optional instance to populate.
     * @return {module:com.gridly.api/model/UpdateGridSetting} The populated <code>UpdateGridSetting</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateGridSetting();

            if (data.hasOwnProperty('defaultDateTimeFormat')) {
                obj['defaultDateTimeFormat'] = DateTimeFormat.constructFromObject(data['defaultDateTimeFormat']);
            }
            if (data.hasOwnProperty('defaultSourceLanguageStatus')) {
                obj['defaultSourceLanguageStatus'] = ApiClient.convertToType(data['defaultSourceLanguageStatus'], 'String');
            }
            if (data.hasOwnProperty('translatorCanViewAutomations')) {
                obj['translatorCanViewAutomations'] = ApiClient.convertToType(data['translatorCanViewAutomations'], 'Boolean');
            }
            if (data.hasOwnProperty('metadata')) {
                obj['metadata'] = ApiClient.convertToType(data['metadata'], {'String': 'String'});
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateGridSetting</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateGridSetting</code>.
     */
    static validateJSON(data) {
        // validate the optional field `defaultDateTimeFormat`
        if (data['defaultDateTimeFormat']) { // data not null
          DateTimeFormat.validateJSON(data['defaultDateTimeFormat']);
        }
        // ensure the json data is a string
        if (data['defaultSourceLanguageStatus'] && !(typeof data['defaultSourceLanguageStatus'] === 'string' || data['defaultSourceLanguageStatus'] instanceof String)) {
            throw new Error("Expected the field `defaultSourceLanguageStatus` to be a primitive type in the JSON string but got " + data['defaultSourceLanguageStatus']);
        }

        return true;
    }


}



/**
 * @member {module:com.gridly.api/model/DateTimeFormat} defaultDateTimeFormat
 */
UpdateGridSetting.prototype['defaultDateTimeFormat'] = undefined;

/**
 * @member {module:com.gridly.api/model/UpdateGridSetting.DefaultSourceLanguageStatusEnum} defaultSourceLanguageStatus
 */
UpdateGridSetting.prototype['defaultSourceLanguageStatus'] = undefined;

/**
 * @member {Boolean} translatorCanViewAutomations
 */
UpdateGridSetting.prototype['translatorCanViewAutomations'] = undefined;

/**
 * @member {Object.<String, String>} metadata
 */
UpdateGridSetting.prototype['metadata'] = undefined;





/**
 * Allowed values for the <code>defaultSourceLanguageStatus</code> property.
 * @enum {String}
 * @readonly
 */
UpdateGridSetting['DefaultSourceLanguageStatusEnum'] = {

    /**
     * value: "unset"
     * @const
     */
    "unset": "unset",

    /**
     * value: "doNotTranslate"
     * @const
     */
    "doNotTranslate": "doNotTranslate",

    /**
     * value: "notReadyForTranslation"
     * @const
     */
    "notReadyForTranslation": "notReadyForTranslation",

    /**
     * value: "readyForTranslation"
     * @const
     */
    "readyForTranslation": "readyForTranslation",

    /**
     * value: "locked"
     * @const
     */
    "locked": "locked",

    /**
     * value: "lockAllLanguages"
     * @const
     */
    "lockAllLanguages": "lockAllLanguages"
};



export default UpdateGridSetting;

