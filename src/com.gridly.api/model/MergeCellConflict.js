/**
 * Gridly API
 * Gridly API documentation
 *
 * The version of the OpenAPI document: 4.29.1
 * Contact: support@gridly.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MergeCellConflict model module.
 * @module com.gridly.api/model/MergeCellConflict
 * @version 4.29.1
 */
class MergeCellConflict {
    /**
     * Constructs a new <code>MergeCellConflict</code>.
     * @alias module:com.gridly.api/model/MergeCellConflict
     * @param columnId {String} 
     * @param option {module:com.gridly.api/model/MergeCellConflict.OptionEnum} 
     */
    constructor(columnId, option) { 
        
        MergeCellConflict.initialize(this, columnId, option);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, columnId, option) { 
        obj['columnId'] = columnId;
        obj['option'] = option;
    }

    /**
     * Constructs a <code>MergeCellConflict</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.gridly.api/model/MergeCellConflict} obj Optional instance to populate.
     * @return {module:com.gridly.api/model/MergeCellConflict} The populated <code>MergeCellConflict</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MergeCellConflict();

            if (data.hasOwnProperty('columnId')) {
                obj['columnId'] = ApiClient.convertToType(data['columnId'], 'String');
            }
            if (data.hasOwnProperty('option')) {
                obj['option'] = ApiClient.convertToType(data['option'], 'String');
            }
        }
        return obj;
    }


}

/**
 * @member {String} columnId
 */
MergeCellConflict.prototype['columnId'] = undefined;

/**
 * @member {module:com.gridly.api/model/MergeCellConflict.OptionEnum} option
 */
MergeCellConflict.prototype['option'] = undefined;





/**
 * Allowed values for the <code>option</code> property.
 * @enum {String}
 * @readonly
 */
MergeCellConflict['OptionEnum'] = {

    /**
     * value: "child"
     * @const
     */
    "child": "child",

    /**
     * value: "parent"
     * @const
     */
    "parent": "parent",

    /**
     * value: "override"
     * @const
     */
    "override": "override",

    /**
     * value: "overrideUpToDate"
     * @const
     */
    "overrideUpToDate": "overrideUpToDate",

    /**
     * value: "overrideOutOfDate"
     * @const
     */
    "overrideOutOfDate": "overrideOutOfDate",

    /**
     * value: "reserve"
     * @const
     */
    "reserve": "reserve",

    /**
     * value: "ignore"
     * @const
     */
    "ignore": "ignore",

    /**
     * value: "source"
     * @const
     */
    "source": "source",

    /**
     * value: "destination"
     * @const
     */
    "destination": "destination"
};



export default MergeCellConflict;

