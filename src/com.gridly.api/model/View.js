/**
 * Gridly API
 * Gridly API documentation
 *
 * The version of the OpenAPI document: 4.15.1
 * Contact: support@gridly.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Record from './Record';
import ViewColumn from './ViewColumn';

/**
 * The View model module.
 * @module com.gridly.api/model/View
 * @version 4.15.1
 */
class View {
    /**
     * Constructs a new <code>View</code>.
     * @alias module:com.gridly.api/model/View
     */
    constructor() { 
        
        View.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>View</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.gridly.api/model/View} obj Optional instance to populate.
     * @return {module:com.gridly.api/model/View} The populated <code>View</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new View();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('columns')) {
                obj['columns'] = ApiClient.convertToType(data['columns'], [ViewColumn]);
            }
            if (data.hasOwnProperty('gridId')) {
                obj['gridId'] = ApiClient.convertToType(data['gridId'], 'String');
            }
            if (data.hasOwnProperty('gridStatus')) {
                obj['gridStatus'] = ApiClient.convertToType(data['gridStatus'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('records')) {
                obj['records'] = ApiClient.convertToType(data['records'], [Record]);
            }
        }
        return obj;
    }


}

/**
 * @member {String} id
 */
View.prototype['id'] = undefined;

/**
 * @member {Array.<module:com.gridly.api/model/ViewColumn>} columns
 */
View.prototype['columns'] = undefined;

/**
 * @member {String} gridId
 */
View.prototype['gridId'] = undefined;

/**
 * @member {module:com.gridly.api/model/View.GridStatusEnum} gridStatus
 */
View.prototype['gridStatus'] = undefined;

/**
 * @member {String} name
 */
View.prototype['name'] = undefined;

/**
 * @member {Array.<module:com.gridly.api/model/Record>} records
 */
View.prototype['records'] = undefined;





/**
 * Allowed values for the <code>gridStatus</code> property.
 * @enum {String}
 * @readonly
 */
View['GridStatusEnum'] = {

    /**
     * value: "deleted"
     * @const
     */
    "deleted": "deleted",

    /**
     * value: "active"
     * @const
     */
    "active": "active",

    /**
     * value: "inactive"
     * @const
     */
    "inactive": "inactive",

    /**
     * value: "restoring"
     * @const
     */
    "restoring": "restoring",

    /**
     * value: "backingUp"
     * @const
     */
    "backingUp": "backingUp",

    /**
     * value: "uploading"
     * @const
     */
    "uploading": "uploading",

    /**
     * value: "importing"
     * @const
     */
    "importing": "importing",

    /**
     * value: "branching"
     * @const
     */
    "branching": "branching",

    /**
     * value: "merging"
     * @const
     */
    "merging": "merging",

    /**
     * value: "duplicating"
     * @const
     */
    "duplicating": "duplicating",

    /**
     * value: "clearingRecords"
     * @const
     */
    "clearingRecords": "clearingRecords"
};



export default View;

