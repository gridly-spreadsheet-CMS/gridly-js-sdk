/**
 * Gridly API
 * Gridly API documentation
 *
 * The version of the OpenAPI document: 4.33.0
 * Contact: support@gridly.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import TranslationStatus from './TranslationStatus';

/**
 * The UpdateTransMem model module.
 * @module com.gridly.api/model/UpdateTransMem
 * @version 4.33.0
 */
class UpdateTransMem {
    /**
     * Constructs a new <code>UpdateTransMem</code>.
     * @alias module:com.gridly.api/model/UpdateTransMem
     */
    constructor() { 
        
        UpdateTransMem.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>UpdateTransMem</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:com.gridly.api/model/UpdateTransMem} obj Optional instance to populate.
     * @return {module:com.gridly.api/model/UpdateTransMem} The populated <code>UpdateTransMem</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new UpdateTransMem();

            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('projectIds')) {
                obj['projectIds'] = ApiClient.convertToType(data['projectIds'], ['Number']);
            }
            if (data.hasOwnProperty('fuzzyMatch')) {
                obj['fuzzyMatch'] = ApiClient.convertToType(data['fuzzyMatch'], 'Boolean');
            }
            if (data.hasOwnProperty('isDisabled')) {
                obj['isDisabled'] = ApiClient.convertToType(data['isDisabled'], 'Boolean');
            }
            if (data.hasOwnProperty('isPausedConsuming')) {
                obj['isPausedConsuming'] = ApiClient.convertToType(data['isPausedConsuming'], 'Boolean');
            }
            if (data.hasOwnProperty('populateTranslationStatus')) {
                obj['populateTranslationStatus'] = TranslationStatus.constructFromObject(data['populateTranslationStatus']);
            }
            if (data.hasOwnProperty('contextLookup')) {
                obj['contextLookup'] = ApiClient.convertToType(data['contextLookup'], 'Boolean');
            }
            if (data.hasOwnProperty('allowAlternative')) {
                obj['allowAlternative'] = ApiClient.convertToType(data['allowAlternative'], 'Boolean');
            }
            if (data.hasOwnProperty('allowAlternativeHasSameRecordId')) {
                obj['allowAlternativeHasSameRecordId'] = ApiClient.convertToType(data['allowAlternativeHasSameRecordId'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>UpdateTransMem</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>UpdateTransMem</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is an array
        if (!Array.isArray(data['projectIds'])) {
            throw new Error("Expected the field `projectIds` to be an array in the JSON data but got " + data['projectIds']);
        }

        return true;
    }


}



/**
 * @member {String} name
 */
UpdateTransMem.prototype['name'] = undefined;

/**
 * @member {String} description
 */
UpdateTransMem.prototype['description'] = undefined;

/**
 * @member {Array.<Number>} projectIds
 */
UpdateTransMem.prototype['projectIds'] = undefined;

/**
 * @member {Boolean} fuzzyMatch
 */
UpdateTransMem.prototype['fuzzyMatch'] = undefined;

/**
 * @member {Boolean} isDisabled
 */
UpdateTransMem.prototype['isDisabled'] = undefined;

/**
 * @member {Boolean} isPausedConsuming
 */
UpdateTransMem.prototype['isPausedConsuming'] = undefined;

/**
 * @member {module:com.gridly.api/model/TranslationStatus} populateTranslationStatus
 */
UpdateTransMem.prototype['populateTranslationStatus'] = undefined;

/**
 * @member {Boolean} contextLookup
 */
UpdateTransMem.prototype['contextLookup'] = undefined;

/**
 * @member {Boolean} allowAlternative
 */
UpdateTransMem.prototype['allowAlternative'] = undefined;

/**
 * @member {Boolean} allowAlternativeHasSameRecordId
 */
UpdateTransMem.prototype['allowAlternativeHasSameRecordId'] = undefined;






export default UpdateTransMem;

